@{
    ViewData["Title"] = "Home";
}

<div class="container mt-5">
    <!-- Header -->
    <h1 class="display-4 text-primary text-center">@ViewBag.TitleMessage</h1>
    <p class="lead text-center text-secondary">@ViewBag.Subtitle</p>

    <!-- Chart Section -->

        <!-- Top Row: Three Cards -->
        <div class="row mt-4">
            <!-- Card 1: Task Status Chart -->
            <div class="col-lg-4 col-md-12 mb-3">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title text-center">Task Status Overview</h5>
                        <canvas id="tasksChart" style="max-width:100%; height:300px;"></canvas>
                    </div>
                </div>
            </div>

            <!-- Card 2: Manage Tasks -->
            <div class="col-lg-4 col-md-12 mb-3">
                <div class="card shadow-sm d-flex flex-column">
                    <div class="card-body d-flex flex-column align-items-center justify-content-center">
                        <h5 class="card-title mb-3 text-center">Manage Tasks</h5>

                        <a asp-controller="Tasks" asp-action="Create" class="btn btn-primary w-100 mb-2 d-flex align-items-center justify-content-center">
                            <i class="bi bi-plus-circle me-2"></i> Create New Task
                        </a>
                        <button class="btn btn-primary w-100 mb-2 d-flex align-items-center justify-content-center" onclick="generateDemoTasks()">
                            <i class="bi bi-people-fill me-2"></i> Generate +3 Demo Tasks
                        </button>

                        <a asp-controller="Home" asp-action="RunPythonScript" class="btn btn-warning w-100 mb-2 d-flex align-items-center justify-content-center">
                            <i class="bi bi-terminal me-2"></i> Run Python Script
                        </a>
                        <a asp-controller="Home" asp-action="RunPowerShellReminder" class="btn btn-warning w-100 mb-2 d-flex align-items-center justify-content-center">
                            <i class="bi bi-magic me-2"></i> Run PowerShell Reminder
                        </a>
                        <a asp-controller="Home" asp-action="RunNodeReport" class="btn btn-warning w-100 mb-2 d-flex align-items-center justify-content-center">
                            <i class="bi bi-file-earmark-bar-graph me-2"></i> Generate Node Report
                        </a>
                        <a asp-controller="Tasks" asp-action="ExportTasksToTxt" class="btn btn-warning w-100 mb-2 d-flex align-items-center justify-content-center">
                            <i class="bi bi-download me-2"></i> Export Tasks to JSON
                        </a>
                    </div>
                </div>
            </div>

            <!-- Card 3: Technologies Used -->
            <div class="col-lg-4 col-md-12 mb-3">
                <div class="card shadow-sm d-flex flex-column">
                    <div class="card-body d-flex flex-column align-items-center justify-content-center">
                        <h5 class="card-title mb-3 text-center">Technologies & Integrations</h5>

                        <a href="https://dotnet.microsoft.com/" target="_blank" class="btn btn-primary w-100 mb-2 d-flex align-items-center justify-content-center">
                            <i class="bi bi-box-arrow-up-right me-2"></i> ASP.NET Core MVC
                        </a>
                        <a href="https://getbootstrap.com/" target="_blank" class="btn btn-primary w-100 mb-2 d-flex align-items-center justify-content-center">
                            <i class="bi bi-bootstrap me-2"></i> Bootstrap 5
                        </a>
                        <a href="https://www.chartjs.org/" target="_blank" class="btn btn-warning w-100 mb-2 d-flex align-items-center justify-content-center">
                            <i class="bi bi-bar-chart-line me-2"></i> Chart.js
                        </a>
                        <a href="https://www.javascript.com/" target="_blank" class="btn btn-warning w-100 mb-2 d-flex align-items-center justify-content-center">
                            <i class="bi bi-code-slash me-2"></i> JavaScript
                        </a>
                        <a href="https://nodejs.org/" target="_blank" class="btn btn-warning w-100 mb-2 d-flex align-items-center justify-content-center">
                            <i class="bi bi-node-plus-fill me-2"></i> Node.js
                        </a>
                        <a href="https://www.python.org/" target="_blank" class="btn btn-warning w-100 mb-2 d-flex align-items-center justify-content-center">
                            <i class="bi bi-python me-2"></i> Python
                        </a>
                        <a href="https://learn.microsoft.com/powershell/" target="_blank" class="btn btn-warning w-100 mb-2 d-flex align-items-center justify-content-center">
                            <i class="bi bi-terminal me-2"></i> PowerShell
                        </a>
                        <a href="https://learn.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/linq/" target="_blank" class="btn btn-warning w-100 d-flex align-items-center justify-content-center">
                            <i class="bi bi-list-check me-2"></i> C# / LINQ
                        </a>
                    </div>
                </div>
            </div>
        </div>




    <!-- Project Overview Section -->
    <div class="container mt-5">
        <h2 class="text-center mb-4">Project Overview</h2>
        <div class="row">
            <div class="col-md-12">
                <p>
                    Welcome to the Task Management Portal! This demo project uses <strong>ASP.NET Core MVC</strong> with <strong>Bootstrap 5</strong> and demonstrates how modern web apps can manage tasks efficiently.
                </p>
                <ul>
                    <li><strong>Task Management:</strong> Create, edit, view, and delete tasks with assignment dates, due dates, and completion status.</li>
                    <li><strong>Assigning Owners:</strong> Tasks can have one or more assigned owners. System ensures every task has at least one responsible owner.</li>
                    <li><strong>Due Dates & Countdown:</strong> Pending tasks show how many days remain until due. Overdue tasks are highlighted.</li>
                    <li><strong>Interactive Visualization:</strong> Pie chart of completed vs pending tasks updates dynamically.</li>
                    <li><strong>Integration Features:</strong> Execute Python scripts, PowerShell reminders, Node.js interactive reports, and export JSON files.</li>
                    <li><strong>Responsive Design:</strong> Bootstrap grid ensures layout works on desktop, tablet, and mobile.</li>
                </ul>

                <p>
                    <strong>Menu Buttons:</strong> All buttons are consistent width, colored, with icons. Blue for task creation, yellow for scripts & exports. Each button demonstrates integration with different technologies.
                </p>

                <p>
                    <strong>Technologies Links:</strong> Links go to official documentation by technology developers. This showcases technical capabilities in a simple way.
                </p>

                <p class="text-muted">
                    This project can serve as a reference for developers learning full-stack .NET development. You can <strong>see, run this code</strong> directly. Visit the GitHub repository:
                    <a href="https://github.com/franchoalejo/TaskManagementPortal" target="_blank">TaskManagementPortal</a>
                </p>
            </div>
        </div>
    </div>
</div>




<!-- Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>

        @using System.Text.Json
    const tasks = @Html.Raw(JsonSerializer.Serialize(ViewBag.Tasks ?? new List<object>()));
    const completed = tasks.filter(t => t.IsCompleted).length;
    const pending = tasks.filter(t => !t.IsCompleted).length;

    const ctx = document.getElementById('tasksChart').getContext('2d');
    new Chart(ctx, {
        type: 'pie',
        data: {
            labels: ['Completed', 'Pending'],
            datasets: [{
                data: [completed, pending],
                backgroundColor: ['#28a745', '#dc3545']
            }]
        },
        options: {
            responsive: true
        }
    });

    function generateDemoTasks() {
        fetch('/Tasks/GenerateDemoTasks')
            .then(r => r.text())
            .then(msg => {
                alert(msg);
                location.reload();
            })
            .catch(err => console.error(err));
    }
</script>
